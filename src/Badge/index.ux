<import name='quist-badge' src='@quist-ui/quist-badge/index'></import>
<import name='quist-button' src='@quist-ui/quist-button/index'></import>

<template>
  <div class="badge-demo">
    <div class="item-box">
      <text class="item-txt">基础</text>
      <quist-badge value="618">
        <quist-button type="primary" value="Primary"></quist-button>
      </quist-ba>
    </div>
    <div class="item-box">
      <text class="item-txt" @click="evtEmit">最大值</text>
      <quist-badge value="618" max="{{max}}">
        <quist-button type="primary" value="Primary"></quist-button>
      </quist-badge>
    </div>
    <div class="item-box">
      <text class="item-txt" @click="evtEmit">状态点</text>
      <quist-badge is-dot>
        <quist-button type="primary" value="Primary"></quist-button>
      </quist-badge>
    </div>
    <picker type="date" id="picker-demo">aaaaaaaa</picker>
  </div>
</template>

<style>
  .badge-demo {
    flex: 1;
    flex-direction: column;
    background-color: #ffffff;
  }

  .item-box {
    margin: 20px;
    padding-bottom: 50px;
    flex-direction: column;
  }

  .item-txt {
    width: 100%;
    margin-bottom: 30px;
    font-size: 32px;
    color: #666666;
  }
</style>

<script>
  export default {
    data: {
      value1: [],
      max: 999,
      data1: {
        values: ['apple', 'banana'],
        options: [
          {
            disabled: true,
            label: '苹果',
            value: 'apple'
          },
          {
            disabled: false,
            label: '梨',
            value: 'pear'
          },
          {
            label: '香蕉',
            value: 'banana'
          },
          {
            disabled: true,
            label: '橘子',
            value: 'orange'
          }
        ]
      },
      data2: {
        values: [],
        options: [{
          label: '记住我',
          value: 1
        }],
      }
    },
    onInit() {
      this.$page.setTitleBar({ text: 'Checkbox' })
    },
    onReady() {
      console.error(this);
    },
    evtEmit() {
      // 父组件向指定子组件触发事件
      this.$vm('childVm').$broadcast('evtCast', { params: 1 })
    },
    callback(data) {
      this.value1 = [...data.detail.values]
    }
  }
</script>